<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picObject.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QfItGiB6MwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="picView.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADEAAAAbCAYAAADVq2dMAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAANrgAA
        DWABxYH/DgAAA4JJREFUWEe1WNtOAkEMXUQBFRFQvACicvUSSXzxB/z/T/Ab9ANMxj1Nu5ntdmaXiyQk
        sjvTnranZzrWkj187u/vXfpJ6vV68v39nfz8/JhW8X40GiW/v79Js9lMDg4Okq+vr9oeIGxn4vr62p2f
        n7t0987f4XDobm5uYOf/P9Pp1PX7/Z1BhwJPK+XG4/H/BDOZTFy73Q6Ch3NQ6uHhoXKAx8fH0bV3d3f7
        CyblsOkMIGazWcFRynVan/KdAr+4uHDyzK/A5eWl+/z8JBqBTlZ1Dg8PHRK4Ncfm87lrNBoF451Ox8Wy
        ZAUmIJbLpQN4AYwKvry8ZCARUK1WK/jkRG4Wy+vra8EQAooB3MQDaCdgUTG9dzAYmMmr7AOqo0vb6/U2
        KikqpTPaarWkZwgLsitrTk5OCvZRNY0DNkoDsTZCkUo3GguOjo5MnnOWaYcvBOw7Z2m1WjlQzg8mGgh6
        QEeOprQCeHx8JDWKBbdYLILqw9Wm7ezDcdCmSTS4j+3s7Mz2zdzMFscodHt7S+vKyqud+0CQZSDmPhO/
        ZhBYo+npJ4I2dbvd6iVL1ws4pgPxG4cgVzMDEpJOBAOV8xCTf06OGYh1Bkkikqenp0LZ+VmMLTmn3Df0
        DE2aGU8f6AoryooP2vv8/BylKI8mGV5OZoJBLBcEnw2xAPAuGIS8gwOA4t4J9Qf5EapwHwV9W8JDh6HV
        0GXGBKjMOWh0leGqv3OV0HTU0bAUZ7ZzDe6fogDDmQlmROYepVBVgdM6X2olATHFsyoqPZkB1bQ6PT0N
        8pMrQPORGNDiUFYZbvrE76dQ1tQaSoI57aKZdRMqBcl88OxExphK9C4mqX5QPM7THqkq300Kcfi+xEZ0
        lnp7eyvoMVeoYFwuRHr2KRuxfRr5AAu6n3q0KsBXgiDV6QV4piuCo5+Hwtzm0OwD5/6tD6exBnl1dZX1
        kHU+yIHqVzBUrWBE1hjOApDt8SUPVKo6Z/lDph7+oFDcjzmhiB2E0bJYd2hk31cFNTbQJci6yAAEvv5A
        50sk7FhXX/irmpxgMGgiPUlKiVEZ0Ozj40MGuMoyC3V6f3+nC1ZIEDa9AsQbJX0L6li3rjIp3eY96CQS
        XApsmwXQZ6tftgGr90C59nV7rBQbeAqqMa8r00gDByX9gbGS8/9ahGbHlAnaoUHX6zX9jcMQ/wzAYYqm
        RyUL48KOoP4AaNjqAbYkdEIAAAAASUVORK5CYII=
</value>
  </data>
</root>